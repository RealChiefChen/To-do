#!/bin/python3
#I'm not even gonna try and write comments for this

from tkinter import *
import customtkinter
from PIL import Image, ImageTk
import os
import configparser
from configparser import ConfigParser

customtkinter.set_appearance_mode("Dark")
customtkinter.set_default_color_theme("blue")

class App(customtkinter.CTk):

    WIDTH = 780
    HEIGHT = 520

    def __init__(self):
        super().__init__()

        global USE
        USE=os.getlogin()
        CON=ConfigParser()
        CON.read(f"/home/{USE}/.config/todo/config.ini")
        RED3=open(f"/home/{USE}/.config/todo/reminder.txt", "r").read()

        self.title("To-do | RealChiefChen")
        self.geometry(f"{App.WIDTH}x{App.HEIGHT}")
        self.protocol("WM_DELETE_WINDOW", self.on_closing)
        self.grid_columnconfigure(1, weight=1)
        self.grid_rowconfigure(0, weight=1)
        
        self.frame_left = customtkinter.CTkFrame(master=self, width=50, corner_radius=0)
        self.frame_left.grid(row=0, column=0, sticky="news")
        self.frame_right = customtkinter.CTkFrame(master=self)
        self.frame_right.grid(row=0, column=1, sticky="news", padx=20, pady=20)
        self.frame_left.grid_rowconfigure(0, minsize=10)
        self.frame_left.grid_rowconfigure(3, weight=1)
        self.frame_left.grid_rowconfigure(8, minsize=20)
        self.frame_left.grid_rowconfigure(11, minsize=10)
        self.frame_right.rowconfigure((0, 1, 2, 3), weight=1)
        self.frame_right.rowconfigure(7, weight=10)
        self.frame_right.columnconfigure((0, 1), weight=1)
        self.frame_right.columnconfigure(2, weight=0)

        def switch_event1():
            T1=self.switch_1.get()
            config=configparser.ConfigParser()
            config.read(f"/home/{USE}/.config/todo/config.ini")    
            if T1==1:
                config['reminder']['speak']="True"
                with open(f"/home/{USE}/.config/todo/config.ini", 'w') as configfile:
                    config.write(configfile)
            if T1==0:
                config['reminder']['speak']="False"
                with open(f"/home/{USE}/.config/todo/config.ini", 'w') as configfile:
                    config.write(configfile)
        self.switch_1 = customtkinter.CTkSwitch(master=self.frame_left, text="Voice", command=switch_event1)
        self.switch_1.grid(row=7, column=0, columnspan=1, pady=10, padx=20, sticky="we")

        def switch_event2():
            T2=self.switch_2.get()
            config=configparser.ConfigParser()
            config.read(f"/home/{USE}/.config/todo/config.ini")    
            if T2==1:
                config['reminder']['notify']="True"
                with open(f"/home/{USE}/.config/todo/config.ini", 'w') as configfile:
#Nice
                    config.write(configfile)
            if T2==0:
                config['reminder']['notify']="False"
                with open(f"/home/{USE}/.config/todo/config.ini", 'w') as configfile:
                    config.write(configfile)
        self.switch_2=customtkinter.CTkSwitch(master=self.frame_left, text="Notification", command=switch_event2)
        self.switch_2.grid(row=8, column=0, columnspan=1, pady=10, padx=20, sticky="we")

        def switch_event3():
            T5=self.switch_3.get()
            config=configparser.ConfigParser()
            config.read(f"/home/{USE}/.config/todo/config.ini")
            if T5==1:
                config["reminder"]["espeak-ng"]="True"
                with open(f"/home/{USE}/.config/todo/config.ini", 'w') as configfile:
                    config.write(configfile)
            if T5==0:
                config["reminder"]["espeak-ng"]="False"
                with open(f"/home/{USE}/.config/todo/config.ini", 'w') as configfile:
                    config.write(configfile)
        self.switch_3=customtkinter.CTkSwitch(master=self.frame_left, text="Espeak-ng", command=switch_event3)
        self.switch_3.grid(row=6, column=0, columnspan=1, pady=10, padx=20, sticky="we")

        self.entry2=customtkinter.CTkEntry(master=self.frame_left, width=70, height=50, placeholder_text="Minutes")
        self.entry2.grid(row=4, column=0, columnspan=1, pady=5, padx=5, sticky="ew")

        def button_event2():
            T4=self.entry2.get()
            config=configparser.ConfigParser()
            config.read(f"/home/{USE}/.config/todo/config.ini")
            config['reminder']['minutes']=T4
            with open(f"/home/{USE}/.config/todo/config.ini", 'w') as configfile:
                config.write(configfile)
        self.button6=customtkinter.CTkButton(master=self.frame_left, text="Enter Minutes", command=button_event2)
        self.button6.grid(row=5)

        my_text2=Text(master=self.frame_right, height=20, width=67, wrap=WORD, bd=0, bg="#292929", fg="silver")
        my_text2.grid(row=0, column=0, pady=10, padx=10, rowspan=8, columnspan=7, sticky="news")
        my_text2.insert(END, RED3)

        NUMLIN=sum(1 for line in open(f"/home/{USE}/.config/todo/reminder.txt"))
        LINES=[]
        for i in range(NUMLIN):
            LINES.append(str(NUMLIN))
            NUMLIN-=1
        LINES.reverse()
        global CHO
        CHO=0
        def combox_event(choice):
            global CHO
            CHO=int(choice)
        OP1=customtkinter.StringVar(value="None")
        self.combox=customtkinter.CTkComboBox(master=self.frame_left, values=LINES, command=combox_event, variable=OP1)
        self.combox.grid(row=1, column=0, columnspan=1, pady=5, padx=5, sticky="ew")

        def button_event2():
                with open(f"/home/{USE}/.config/todo/reminder.txt", 'r') as fr:
                    lines=fr.readlines()
                    ptr=1
                    if len(lines)>0 and CHO!=0:
                        with open(f"/home/{USE}/.config/todo/reminder.txt", 'w') as fw:
                            for line in lines:
                                if ptr!=CHO:
                                    fw.write(line)
                                ptr+=1
                RED3=open(f"/home/{USE}/.config/todo/reminder.txt", "r").read()
                my_text2.delete('1.0', END)
                my_text2.insert(END, RED3)
        self.button7=customtkinter.CTkButton(master=self.frame_left, text="Delete Line", command=button_event2)
        self.button7.grid(row=2)

        IMG=self.load_image("/GaRI_happy.png", 100)
        global NUM
        NUM=0

        def button_event3():
            IMG=self.load_image("/GaRI_happy.png", 100)
            global NUM
            if NUM==0:
                IMG=self.load_image("/GaRI_really_sad.png", 100)
                self.title("To-do | GaRI")
            if NUM==1:
                IMG=self.load_image("/GaRI_bruh.png", 100)
            if NUM==2:
                IMG=self.load_image("/GaRI_sad.png", 100)
            if NUM==3:
                IMG=self.load_image("/GaRI_happy.png", 100)
            if NUM==4:
                IMG=self.load_image("/GaRI_really_happy.png", 100)
                NUM=-1
            NUM+=1
            button8=customtkinter.CTkButton(master=self.frame_left, image=IMG, text="", hover_color="#1f6aa5", command=button_event3)
            button8.grid(row=0, column=0)
        button8=customtkinter.CTkButton(master=self.frame_left, image=IMG, text="", hover_color="#1f6aa5", command=button_event3)
        button8.grid(row=0, column=0)

        self.entry=customtkinter.CTkEntry(master=self.frame_right, width=120)
        self.entry.grid(row=8, column=0, columnspan=2, pady=20, padx=20, sticky="we",)

        def button_event():
            RED4=open(f"/home/{USE}/.config/todo/reminder.txt", "a")
            T3=self.entry.get()
            if T3=="":
                pass
            elif os.path.getsize(f"/home/{USE}/.config/todo/reminder.txt")>0:
                my_text2.insert(END, f"{T3}"+"\n")
            else:
                my_text2.insert(END, f"{T3}"+"\n")
            self.entry.delete(0, END)
            if os.path.getsize(f"/home/{USE}/.config/todo/reminder.txt")>0 and not T3=="":
                RED4.write(f"{T3}"+"\n")
            elif os.path.getsize(f"/home/{USE}/.config/todo/reminder.txt")>0 and T3=="":
                pass
            else:
                RED4.write(f"{T3}"+"\n")
            RED4.close
            NUMLIN2=sum(1 for line in open(f"/home/{USE}/.config/todo/reminder.txt"))
            LINES.append(str(NUMLIN2+1))
            self.combox.configure(values=LINES, command=combox_event, variable=OP1)
        self.button_5=customtkinter.CTkButton(master=self.frame_right, text="<-- Enter Reminder", command=button_event)
        self.button_5.grid(row=8, column=2, pady=20, padx=20, sticky="we")

        if CON["reminder"]["speak"]=="True":
            self.switch_1.select()
        if CON["reminder"]["notify"]=="True":
            self.switch_2.select()
        if CON["reminder"]["espeak-ng"]=="True":
            self.switch_3.select()

    def on_closing(self, event=0):
        self.destroy()
    def load_image(self, path, image_size):
        return ImageTk.PhotoImage(Image.open(f"/home/{USE}/.config/todo" + path).resize((image_size, image_size)))

if __name__ == "__main__":
    app = App()
    app.mainloop()